DEBUG   2025-10-30 11:07:09,973 vxpy.calibration                         Load calibration file calibrations/spherical_4_channel_projection.yaml
DEBUG   2025-10-30 11:07:09,977 vxpy.core.ipc[Controller]                Set state from STATE.NA to STATE.STARTING
INFO    2025-10-30 11:07:10,182 vxpy.modules.controller                  Running vxPy 0.1.7
INFO    2025-10-30 11:07:10,346 vxpy.modules.controller                  Protocolized processes: ['Display', 'Io']
INFO    2025-10-30 11:07:10,450 vxpy.modules.controller                  Minimum sleep period is 1.497ms
INFO    2025-10-30 11:07:10,451 vxpy.modules.controller                  Timing precision on system 0.501156ms
INFO    2025-10-30 11:07:10,451 vxpy.modules.controller                  Load routine vxpy.extras.calculate_csd.CalculatePSD (load priority 1000)
DEBUG   2025-10-30 11:07:11,238 vxpy.core.routine                        Create ValueProxy for CalculatePSD.nperseg (<class 'int'>)
DEBUG   2025-10-30 11:07:11,241 vxpy.core.routine                        Create ValueProxy for CalculatePSD.process_name (<class 'str'>)
INFO    2025-10-30 11:07:11,243 vxpy.modules.controller                  Load routine vxpy.extras.camera_capture.Frames (load priority 1000)
DEBUG   2025-10-30 11:07:11,341 vxpy.core.routine                        Create ListProxy for Frames.device_list
DEBUG   2025-10-30 11:07:11,344 vxpy.core.routine                        Create DictProxy for Frames.flip_lr
DEBUG   2025-10-30 11:07:11,346 vxpy.core.routine                        Create DictProxy for Frames.flip_ud
DEBUG   2025-10-30 11:07:11,348 vxpy.core.routine                        Create ValueProxy for Frames.frame_postfix (<class 'str'>)
DEBUG   2025-10-30 11:07:11,350 vxpy.core.routine                        Create ValueProxy for Frames.process_name (<class 'str'>)
DEBUG   2025-10-30 11:07:11,353 vxpy.core.routine                        Create DictProxy for Frames.rotation
INFO    2025-10-30 11:07:12,164 vxpy.modules.controller                  Load routine vxpy.extras.display_capture.Frames (load priority 1000)
DEBUG   2025-10-30 11:07:12,165 vxpy.core.routine                        Create ValueProxy for Frames.process_name (<class 'str'>)
DEBUG   2025-10-30 11:07:12,168 vxpy.core.routine                        Create ValueProxy for Frames.downsample_by (<class 'int'>)
INFO    2025-10-30 11:07:12,236 vxpy.modules.controller                  Load routine vxpy.extras.write_test_attributes.RunCtrlLed (load priority 1000)
DEBUG   2025-10-30 11:07:12,331 vxpy.core.routine                        Create ValueProxy for RunCtrlLed.process_name (<class 'str'>)
INFO    2025-10-30 11:07:12,333 vxpy.modules.controller                  Load routine vxpy.extras.write_test_attributes.SinesAddedWhiteNoise (load priority 1000)
DEBUG   2025-10-30 11:07:12,431 vxpy.core.routine                        Create ValueProxy for SinesAddedWhiteNoise.attr_name (<class 'str'>)
DEBUG   2025-10-30 11:07:12,434 vxpy.core.routine                        Create ValueProxy for SinesAddedWhiteNoise.process_name (<class 'str'>)
DEBUG   2025-10-30 11:07:12,435 vxpy.core.routine                        Create ListProxy for SinesAddedWhiteNoise.frequencies
INFO    2025-10-30 11:07:12,441 vxpy.modules.controller                  Load routine vxpy.extras.zf_eyeposition_tracking.ZFEyeTracking (load priority 1000)
DEBUG   2025-10-30 11:07:12,538 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.ang_le_pos_prefix (<class 'str'>)
DEBUG   2025-10-30 11:07:12,541 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.ang_le_vel_prefix (<class 'str'>)
DEBUG   2025-10-30 11:07:12,543 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.ang_re_pos_prefix (<class 'str'>)
DEBUG   2025-10-30 11:07:12,545 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.ang_re_vel_prefix (<class 'str'>)
DEBUG   2025-10-30 11:07:12,547 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.binary_threshold (<class 'int'>)
DEBUG   2025-10-30 11:07:12,549 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.brightness (<class 'int'>)
DEBUG   2025-10-30 11:07:12,550 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.brightness_max (<class 'int'>)
DEBUG   2025-10-30 11:07:12,552 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.brightness_min (<class 'int'>)
DEBUG   2025-10-30 11:07:12,554 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.camera_device_id (<class 'str'>)
DEBUG   2025-10-30 11:07:12,556 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.contrast (<class 'float'>)
DEBUG   2025-10-30 11:07:12,558 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.current_roi_count (<class 'int'>)
DEBUG   2025-10-30 11:07:12,559 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.extracted_rect_prefix (<class 'str'>)
DEBUG   2025-10-30 11:07:12,562 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.flip_direction (<class 'bool'>)
DEBUG   2025-10-30 11:07:12,564 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.frame_corrected_name (<class 'str'>)
DEBUG   2025-10-30 11:07:12,565 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.frame_name (<class 'str'>)
DEBUG   2025-10-30 11:07:12,567 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.le_axes_prefix (<class 'str'>)
DEBUG   2025-10-30 11:07:12,569 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.le_sacc_direction_prefix (<class 'str'>)
DEBUG   2025-10-30 11:07:12,571 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.le_sacc_prefix (<class 'str'>)
DEBUG   2025-10-30 11:07:12,573 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.min_particle_size (<class 'int'>)
DEBUG   2025-10-30 11:07:12,574 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.process_name (<class 'str'>)
DEBUG   2025-10-30 11:07:12,576 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.re_axes_prefix (<class 'str'>)
DEBUG   2025-10-30 11:07:12,578 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.re_sacc_direction_prefix (<class 'str'>)
DEBUG   2025-10-30 11:07:12,580 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.re_sacc_prefix (<class 'str'>)
DEBUG   2025-10-30 11:07:12,581 vxpy.core.routine                        Create ListProxy for ZFEyeTracking.reference_points
DEBUG   2025-10-30 11:07:12,583 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.roi_maxnum (<class 'int'>)
DEBUG   2025-10-30 11:07:12,585 vxpy.core.routine                        Create ListProxy for ZFEyeTracking.rois
DEBUG   2025-10-30 11:07:12,588 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.routine_prefix (<class 'str'>)
DEBUG   2025-10-30 11:07:12,589 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.sacc_trigger_name (<class 'str'>)
DEBUG   2025-10-30 11:07:12,591 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.saccade_threshold (<class 'int'>)
DEBUG   2025-10-30 11:07:12,593 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.use_image_correction (<class 'bool'>)
DEBUG   2025-10-30 11:07:12,595 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.use_motion_correction (<class 'bool'>)
INFO    2025-10-30 11:07:12,596 vxpy.core.routine                        Set roi_maxnum to 1 in routine ZFEyeTracking
INFO    2025-10-30 11:07:12,597 vxpy.core.routine                        Set min_size to 45 in routine ZFEyeTracking
DEBUG   2025-10-30 11:07:12,597 vxpy.core.routine                        Create ValueProxy for ZFEyeTracking.min_size (<class 'int'>)
INFO    2025-10-30 11:07:15,904 vxpy.modules.controller                  Start process Camera (PID: 12308)
DEBUG   2025-10-30 11:07:15,905 vxpy.core.ipc[Controller]                Set state from STATE.STARTING to STATE.IDLE
DEBUG   2025-10-30 11:07:16,102 vxpy.calibration                         Load calibration file calibrations/spherical_4_channel_projection.yaml
INFO    2025-10-30 11:07:16,107 vxpy.core.process[Camera]                Initialize routine Frames
INFO    2025-10-30 11:07:16,213 vxpy.core.attribute[Camera]              Set attribute "fish_embedded_frame" to be written to file. 
INFO    2025-10-30 11:07:16,213 vxpy.core.process[Camera]                Initialize routine ZFEyeTracking
DEBUG   2025-10-30 11:07:16,214 vxpy.core.ipc[Camera]                    Set state from STATE.NA to STATE.STARTING
DEBUG   2025-10-30 11:07:16,215 vxpy.devices.camera.virtual_camera       Open dummy camera data file
INFO    2025-10-30 11:07:16,216 vxpy.core.process[Camera]                Process started
DEBUG   2025-10-30 11:07:16,216 vxpy.core.ipc[Camera]                    Set state from STATE.STARTING to STATE.IDLE
INFO    2025-10-30 11:07:18,883 vxpy.modules.controller                  Start process Display (PID: 32448)
DEBUG   2025-10-30 11:07:18,883 vxpy.core.ipc[Controller]                Set state from STATE.IDLE to STATE.IDLE
DEBUG   2025-10-30 11:07:19,067 vxpy.calibration                         Load calibration file calibrations/spherical_4_channel_projection.yaml
INFO    2025-10-30 11:07:19,071 vxpy.core.process[Display]               Initialize routine Frames
DEBUG   2025-10-30 11:07:19,072 vxpy.core.ipc[Display]                   Set state from STATE.NA to STATE.STARTING
DEBUG   2025-10-30 11:07:19,412 vxpy.modules.display                     Set canvas position to (2560, 0)
DEBUG   2025-10-30 11:07:19,413 vxpy.modules.display                     Set canvas size to (400, 400)
INFO    2025-10-30 11:07:19,479 vxpy.core.process[Display]               Process started
DEBUG   2025-10-30 11:07:19,480 vxpy.core.ipc[Display]                   Set state from STATE.STARTING to STATE.IDLE
INFO    2025-10-30 11:07:22,298 vxpy.modules.controller                  Start process Gui (PID: 29744)
DEBUG   2025-10-30 11:07:22,299 vxpy.core.ipc[Controller]                Set state from STATE.IDLE to STATE.IDLE
DEBUG   2025-10-30 11:07:22,490 vxpy.calibration                         Load calibration file calibrations/spherical_4_channel_projection.yaml
DEBUG   2025-10-30 11:07:22,495 vxpy.core.ipc[Gui]                       Set state from STATE.NA to STATE.STARTING
WARNING 2025-10-30 11:07:22,855 vxpy.modules.gui                         Using windows windowing platform. This is untested.
DEBUG   2025-10-30 11:07:22,993 vxpy.core.process[Gui]                   Register callback RecordingWidget:RecordingWidget.show_lab_notebook in module Gui
DEBUG   2025-10-30 11:07:22,993 vxpy.core.process[Gui]                   Register callback RecordingWidget:RecordingWidget.close_lab_notebook in module Gui
DEBUG   2025-10-30 11:07:24,388 vxpy.core.process[Gui]                   Register callback PlottingWindow:PlottingWindow.add_buffer_attribute in module Gui
DEBUG   2025-10-30 11:07:24,389 vxpy.core.process[Gui]                   Register callback PlottingWindow:PlottingWindow.remove_buffer_attribute in module Gui
INFO    2025-10-30 11:07:24,403 vxpy.modules.gui                         Load UI addon vxpy.extras.camera_capture.FrameUI
INFO    2025-10-30 11:07:24,512 vxpy.modules.gui                         Load UI addon vxpy.extras.zf_eyeposition_tracking.ZFEyeTrackingUI
DEBUG   2025-10-30 11:07:24,618 matplotlib                               CACHEDIR=C:\Users\gsoto\.matplotlib
DEBUG   2025-10-30 11:07:24,624 matplotlib.font_manager                  Using fontManager instance from C:\Users\gsoto\.matplotlib\fontlist-v390.json
INFO    2025-10-30 11:07:25,107 vxpy.modules.gui                         Load UI addon vxpy.extras.display_widgets.VisualInteractor
INFO    2025-10-30 11:07:25,354 vxpy.modules.gui                         Load UI addon vxpy.extras.display_widgets.VisualStreamAddon
INFO    2025-10-30 11:07:25,444 vxpy.modules.gui                         Load UI addon vxpy.extras.calculate_csd.DisplayPSD
DEBUG   2025-10-30 11:07:25,466 vxpy.core.ipc[Gui]                       Send to modules Worker with signal SIGNAL.rpc > args: ('CalculatePSD.set_integration_window_width', 1024) > kwargs: {}
DEBUG   2025-10-30 11:07:25,772 vxpy.core.ipc[Gui]                       Send to modules Worker with signal SIGNAL.rpc > args: ('CalculatePSD.set_input_signal', 'Camera_iteration') > kwargs: {'force_overwrite': True}
INFO    2025-10-30 11:07:25,804 vxpy.core.process[Gui]                   Process started
DEBUG   2025-10-30 11:07:25,804 vxpy.core.ipc[Gui]                       Set state from STATE.STARTING to STATE.IDLE
INFO    2025-10-30 11:07:25,852 vxpy.modules.controller                  Start process Io (PID: 31036)
DEBUG   2025-10-30 11:07:25,853 vxpy.core.ipc[Controller]                Set state from STATE.IDLE to STATE.IDLE
DEBUG   2025-10-30 11:07:26,105 vxpy.calibration                         Load calibration file calibrations/spherical_4_channel_projection.yaml
INFO    2025-10-30 11:07:26,111 vxpy.core.process[Io]                    Initialize routine RunCtrlLed
INFO    2025-10-30 11:07:26,111 vxpy.core.process[Io]                    Initialize routine SinesAddedWhiteNoise
DEBUG   2025-10-30 11:07:26,113 vxpy.core.ipc[Io]                        Send to modules Gui with signal SIGNAL.rpc > args: ('PlottingWindow.add_buffer_attribute', 'test_sines_whitenoise') > kwargs: {'axis': 'Noisy signals'}
INFO    2025-10-30 11:07:26,113 vxpy.core.attribute[Io]                  Set attribute "test_sines_whitenoise" to be written to file. 
DEBUG   2025-10-30 11:07:26,114 vxpy.core.ipc[Io]                        Set state from STATE.NA to STATE.STARTING
INFO    2025-10-30 11:07:26,114 vxpy.modules.io                          Initialize VirtualDaqPin('on_off_1s_di', PINSIGTYPE.DIGITAL, PINSIGDIR.INPUT)
INFO    2025-10-30 11:07:26,114 vxpy.core.attribute[Io]                  Set attribute "di_on_off_1s_di" to be written to file. 
DEBUG   2025-10-30 11:07:26,115 vxpy.core.ipc[Io]                        Send to modules Gui with signal SIGNAL.rpc > args: ('PlottingWindow.add_buffer_attribute', 'di_on_off_1s_di') > kwargs: {'axis': 'di'}
INFO    2025-10-30 11:07:26,115 vxpy.modules.io                          Initialize VirtualDaqPin('noisy_sinewave_input', PINSIGTYPE.ANALOG, PINSIGDIR.INPUT)
INFO    2025-10-30 11:07:26,115 vxpy.core.attribute[Io]                  Set attribute "ai_noisy_sinewave_input" to be written to file. 
DEBUG   2025-10-30 11:07:26,115 vxpy.core.ipc[Io]                        Send to modules Gui with signal SIGNAL.rpc > args: ('PlottingWindow.add_buffer_attribute', 'ai_noisy_sinewave_input') > kwargs: {'axis': 'ai'}
INFO    2025-10-30 11:07:26,116 vxpy.modules.io                          Initialize VirtualDaqPin('ctrl_led', PINSIGTYPE.DIGITAL, PINSIGDIR.OUTPUT)
INFO    2025-10-30 11:07:26,116 vxpy.core.attribute[Io]                  Set attribute "do_ctrl_led" to be written to file. 
DEBUG   2025-10-30 11:07:26,116 vxpy.core.ipc[Io]                        Send to modules Gui with signal SIGNAL.rpc > args: ('PlottingWindow.add_buffer_attribute', 'do_ctrl_led') > kwargs: {'axis': 'do'}
INFO    2025-10-30 11:07:26,117 vxpy.modules.io                          Initialize VirtualDaqPin('slow_sinewave_input', PINSIGTYPE.ANALOG, PINSIGDIR.INPUT)
DEBUG   2025-10-30 11:07:26,117 vxpy.core.process[Gui]                   Gui received message from Io. Signal: SIGNAL.rpc, args: ('PlottingWindow.add_buffer_attribute', 'test_sines_whitenoise'), kwargs: {'axis': 'Noisy signals', '_send_verbosely': True}
INFO    2025-10-30 11:07:26,117 vxpy.core.attribute[Io]                  Set attribute "ai_slow_sinewave_input" to be written to file. 
DEBUG   2025-10-30 11:07:26,117 vxpy.core.process[Gui]                   Call registered callback Gui:PlottingWindow.add_buffer_attribute with args ('test_sines_whitenoise',) and kwargs {'axis': 'Noisy signals'}
DEBUG   2025-10-30 11:07:26,117 vxpy.core.ipc[Io]                        Send to modules Gui with signal SIGNAL.rpc > args: ('PlottingWindow.add_buffer_attribute', 'ai_slow_sinewave_input') > kwargs: {'axis': 'ai'}
INFO    2025-10-30 11:07:26,117 vxpy.modules.io                          Initialize VirtualDaqPin('led_ctrl1', PINSIGTYPE.DIGITAL, PINSIGDIR.OUTPUT)
INFO    2025-10-30 11:07:26,118 vxpy.core.attribute[Io]                  Set attribute "do_led_ctrl1" to be written to file. 
DEBUG   2025-10-30 11:07:26,118 vxpy.core.ipc[Io]                        Send to modules Gui with signal SIGNAL.rpc > args: ('PlottingWindow.add_buffer_attribute', 'do_led_ctrl1') > kwargs: {'axis': 'do'}
INFO    2025-10-30 11:07:26,119 vxpy.modules.io                          Initialize VirtualDaqPin('led_ctrl2', PINSIGTYPE.DIGITAL, PINSIGDIR.OUTPUT)
INFO    2025-10-30 11:07:26,119 vxpy.core.attribute[Io]                  Set attribute "do_led_ctrl2" to be written to file. 
DEBUG   2025-10-30 11:07:26,119 vxpy.core.ipc[Io]                        Send to modules Gui with signal SIGNAL.rpc > args: ('PlottingWindow.add_buffer_attribute', 'do_led_ctrl2') > kwargs: {'axis': 'do'}
INFO    2025-10-30 11:07:26,119 vxpy.core.process[Io]                    Process started
DEBUG   2025-10-30 11:07:26,120 vxpy.core.ipc[Io]                        Set state from STATE.STARTING to STATE.IDLE
DEBUG   2025-10-30 11:07:26,214 vxpy.core.process[Gui]                   Gui received message from Io. Signal: SIGNAL.rpc, args: ('PlottingWindow.add_buffer_attribute', 'di_on_off_1s_di'), kwargs: {'axis': 'di', '_send_verbosely': True}
DEBUG   2025-10-30 11:07:26,214 vxpy.core.process[Gui]                   Call registered callback Gui:PlottingWindow.add_buffer_attribute with args ('di_on_off_1s_di',) and kwargs {'axis': 'di'}
DEBUG   2025-10-30 11:07:26,335 vxpy.core.process[Gui]                   Gui received message from Io. Signal: SIGNAL.rpc, args: ('PlottingWindow.add_buffer_attribute', 'ai_noisy_sinewave_input'), kwargs: {'axis': 'ai', '_send_verbosely': True}
DEBUG   2025-10-30 11:07:26,336 vxpy.core.process[Gui]                   Call registered callback Gui:PlottingWindow.add_buffer_attribute with args ('ai_noisy_sinewave_input',) and kwargs {'axis': 'ai'}
DEBUG   2025-10-30 11:07:26,462 vxpy.core.process[Gui]                   Gui received message from Io. Signal: SIGNAL.rpc, args: ('PlottingWindow.add_buffer_attribute', 'do_ctrl_led'), kwargs: {'axis': 'do', '_send_verbosely': True}
DEBUG   2025-10-30 11:07:26,463 vxpy.core.process[Gui]                   Call registered callback Gui:PlottingWindow.add_buffer_attribute with args ('do_ctrl_led',) and kwargs {'axis': 'do'}
DEBUG   2025-10-30 11:07:26,603 vxpy.core.process[Gui]                   Gui received message from Io. Signal: SIGNAL.rpc, args: ('PlottingWindow.add_buffer_attribute', 'ai_slow_sinewave_input'), kwargs: {'axis': 'ai', '_send_verbosely': True}
DEBUG   2025-10-30 11:07:26,603 vxpy.core.process[Gui]                   Call registered callback Gui:PlottingWindow.add_buffer_attribute with args ('ai_slow_sinewave_input',) and kwargs {'axis': 'ai'}
DEBUG   2025-10-30 11:07:26,687 vxpy.core.process[Gui]                   Gui received message from Io. Signal: SIGNAL.rpc, args: ('PlottingWindow.add_buffer_attribute', 'do_led_ctrl1'), kwargs: {'axis': 'do', '_send_verbosely': True}
DEBUG   2025-10-30 11:07:26,687 vxpy.core.process[Gui]                   Call registered callback Gui:PlottingWindow.add_buffer_attribute with args ('do_led_ctrl1',) and kwargs {'axis': 'do'}
DEBUG   2025-10-30 11:07:26,790 vxpy.core.process[Gui]                   Gui received message from Io. Signal: SIGNAL.rpc, args: ('PlottingWindow.add_buffer_attribute', 'do_led_ctrl2'), kwargs: {'axis': 'do', '_send_verbosely': True}
DEBUG   2025-10-30 11:07:26,791 vxpy.core.process[Gui]                   Call registered callback Gui:PlottingWindow.add_buffer_attribute with args ('do_led_ctrl2',) and kwargs {'axis': 'do'}
INFO    2025-10-30 11:07:29,840 vxpy.modules.controller                  Start process Worker (PID: 32272)
DEBUG   2025-10-30 11:07:29,842 vxpy.core.ipc[Controller]                Set state from STATE.IDLE to STATE.IDLE
DEBUG   2025-10-30 11:07:29,843 vxpy.core.ipc[Controller]                Send to modules Gui with signal SIGNAL.rpc > args: ('PlottingWindow.add_buffer_attribute', '__record_group_id') > kwargs: {'name': 'Record group ID', 'axis': 'ID'}
INFO    2025-10-30 11:07:29,844 vxpy.core.process[Controller]            Process started
DEBUG   2025-10-30 11:07:29,845 vxpy.core.ipc[Controller]                Set state from STATE.IDLE to STATE.IDLE
DEBUG   2025-10-30 11:07:30,032 vxpy.core.process[Gui]                   Gui received message from Controller. Signal: SIGNAL.rpc, args: ('PlottingWindow.add_buffer_attribute', '__record_group_id'), kwargs: {'name': 'Record group ID', 'axis': 'ID', '_send_verbosely': True}
DEBUG   2025-10-30 11:07:30,033 vxpy.core.process[Gui]                   Call registered callback Gui:PlottingWindow.add_buffer_attribute with args ('__record_group_id',) and kwargs {'name': 'Record group ID', 'axis': 'ID'}
DEBUG   2025-10-30 11:07:30,136 vxpy.calibration                         Load calibration file calibrations/spherical_4_channel_projection.yaml
INFO    2025-10-30 11:07:30,142 vxpy.core.process[Worker]                Initialize routine CalculatePSD
DEBUG   2025-10-30 11:07:30,143 vxpy.core.process[Worker]                Register callback CalculatePSD:CalculatePSD.set_input_signal in module Worker
DEBUG   2025-10-30 11:07:30,143 vxpy.core.process[Worker]                Register callback CalculatePSD:CalculatePSD.set_integration_window_width in module Worker
DEBUG   2025-10-30 11:07:30,143 vxpy.core.ipc[Worker]                    Set state from STATE.NA to STATE.STARTING
INFO    2025-10-30 11:07:30,144 vxpy.core.process[Worker]                Process started
DEBUG   2025-10-30 11:07:30,144 vxpy.core.ipc[Worker]                    Set state from STATE.STARTING to STATE.IDLE
DEBUG   2025-10-30 11:07:30,146 vxpy.core.process[Worker]                Worker received message from Gui. Signal: SIGNAL.rpc, args: ('CalculatePSD.set_integration_window_width', 1024), kwargs: {'_send_verbosely': True}
DEBUG   2025-10-30 11:07:30,146 vxpy.core.process[Worker]                Call registered callback Worker:CalculatePSD.set_integration_window_width with args (1024,) and kwargs {}
DEBUG   2025-10-30 11:07:30,149 vxpy.core.process[Worker]                Worker received message from Gui. Signal: SIGNAL.rpc, args: ('CalculatePSD.set_input_signal', 'Camera_iteration'), kwargs: {'force_overwrite': True, '_send_verbosely': True}
DEBUG   2025-10-30 11:07:30,149 vxpy.core.process[Worker]                Call registered callback Worker:CalculatePSD.set_input_signal with args ('Camera_iteration',) and kwargs {'force_overwrite': True}
INFO    2025-10-30 11:07:30,150 vxpy.extras.calculate_csd                Set input signal in CalculatePSD to Camera_iteration.
DEBUG   2025-10-30 11:08:45,468 vxpy.core.ipc[Gui]                       Send to modules Controller with signal SIGNAL.rpc > args: ('Controller.commence_shutdown',) > kwargs: {}
DEBUG   2025-10-30 11:08:45,471 vxpy.core.process[Controller]            Controller received message from Gui. Signal: SIGNAL.rpc, args: ('Controller.commence_shutdown',), kwargs: {'_send_verbosely': True}
DEBUG   2025-10-30 11:08:45,471 vxpy.core.process[Controller]            Callback to Controller:commence_shutdown with args () and kwargs {}
DEBUG   2025-10-30 11:08:45,471 vxpy.modules.controller                  Shutdown requested. Checking.
DEBUG   2025-10-30 11:08:45,472 vxpy.modules.controller                  Shut down processes
DEBUG   2025-10-30 11:08:45,473 vxpy.core.ipc[Controller]                Set state from STATE.IDLE to STATE.SHUTDOWN
DEBUG   2025-10-30 11:08:45,476 vxpy.core.ipc[Worker]                    Set state from STATE.IDLE to STATE.STOPPED
DEBUG   2025-10-30 11:08:45,478 vxpy.core.ipc[Camera]                    Set state from STATE.IDLE to STATE.STOPPED
DEBUG   2025-10-30 11:08:45,479 vxpy.core.ipc[Io]                        Set state from STATE.IDLE to STATE.STOPPED
